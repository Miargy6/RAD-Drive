{"ast":null,"code":"var _jsxFileName = \"E:\\\\GitHub\\\\CornelderDrive\\\\src\\\\components\\\\google-drive\\\\Folder.js\";\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, ButtonGroup, Dropdown, Modal } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faFolder } from \"@fortawesome/free-solid-svg-icons\";\nimport { database } from \"../../firebase\";\nimport { toast } from \"react-toastify\";\nexport default function Folder({\n  folder\n}) {\n  const [showModal, setShowModal] = useState(false);\n\n  const handleCloseModal = () => setShowModal(false);\n\n  const handleShowModal = () => setShowModal(true);\n\n  const handleDeleteFolder = () => {\n    database.folders.doc(folder.id).delete().then(() => {\n      toast.success(\"Folder deleted succesfully\");\n    }).catch(err => {\n      toast.error(err);\n    });\n    handleCloseModal();\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal, {\n    show: showModal,\n    onHide: handleCloseModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, \"Delete folder\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, \"Are you sure want to delete \", folder.name), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: handleCloseModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"danger\",\n    onClick: handleDeleteFolder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, \"Delete\"))), /*#__PURE__*/React.createElement(Dropdown, {\n    alignRight: true,\n    as: ButtonGroup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    to: {\n      pathname: `/folder/${folder.id}`,\n      state: {\n        folder: folder\n      }\n    },\n    variant: \"outline-dark\",\n    className: \"text-truncate\",\n    as: Link,\n    style: {\n      width: \"200px\"\n    },\n    title: folder.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faFolder,\n    className: \"mr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }), folder.name), /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n    split: true,\n    variant: \"outline-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n    as: \"button\",\n    className: \"\",\n    onClick: handleShowModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, \"Delete\"))));\n}","map":{"version":3,"sources":["E:/GitHub/CornelderDrive/src/components/google-drive/Folder.js"],"names":["React","useState","Link","Button","ButtonGroup","Dropdown","Modal","FontAwesomeIcon","faFolder","database","toast","Folder","folder","showModal","setShowModal","handleCloseModal","handleShowModal","handleDeleteFolder","folders","doc","id","delete","then","success","catch","err","error","name","pathname","state","width"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, ButtonGroup, Dropdown, Modal } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faFolder } from \"@fortawesome/free-solid-svg-icons\";\nimport { database } from \"../../firebase\";\nimport { toast } from \"react-toastify\";\nexport default function Folder({ folder }) {\n  const [showModal, setShowModal] = useState(false);\n  const handleCloseModal = () => setShowModal(false);\n  const handleShowModal = () => setShowModal(true);\n  const handleDeleteFolder = () => {\n    database.folders\n      .doc(folder.id)\n      .delete()\n      .then(() => {\n        toast.success(\"Folder deleted succesfully\");\n      })\n      .catch((err) => {\n        toast.error(err);\n      });\n    handleCloseModal();\n  };\n  return (\n    <>\n      <Modal show={showModal} onHide={handleCloseModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>Delete folder</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>Are you sure want to delete {folder.name}</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleCloseModal}>\n            Cancel\n          </Button>\n          <Button variant=\"danger\" onClick={handleDeleteFolder}>\n            Delete\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <Dropdown alignRight as={ButtonGroup}>\n        <Button\n          to={{\n            pathname: `/folder/${folder.id}`,\n            state: { folder: folder },\n          }}\n          variant=\"outline-dark\"\n          className=\"text-truncate\"\n          as={Link}\n          style={{ width: \"200px\" }}\n          title={folder.name}\n        >\n          <FontAwesomeIcon icon={faFolder} className=\"mr-2\" />\n          {folder.name}\n        </Button>\n        <Dropdown.Toggle split variant=\"outline-dark\" />\n        <Dropdown.Menu>\n          <Dropdown.Item as=\"button\" className=\"\" onClick={handleShowModal}>\n            Delete\n          </Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}