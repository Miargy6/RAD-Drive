{"ast":null,"code":"var _jsxFileName = \"E:\\\\Mussagy\\\\Programming\\\\Curso\\\\firebase-google-drive-clone-main\\\\firebase-google-drive-clone-main\\\\google-drive-clone\\\\src\\\\components\\\\google-drive\\\\FolderBreadcrumbs.js\";\nimport React from \"react\";\nimport { Breadcrumb } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { ROOT_FOLDER } from \"../../hooks/useFolder\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FolderBreadcrumbs(_ref) {\n  let {\n    currentFolder\n  } = _ref;\n  let path = currentFolder === ROOT_FOLDER ? [] : [ROOT_FOLDER];\n  if (currentFolder) path = [...path, ...currentFolder.path];\n  return /*#__PURE__*/_jsxDEV(Breadcrumb, {\n    className: \"flex-grow-1\",\n    listProps: {\n      className: \"bg-white pl-0 m-0\"\n    },\n    children: [path.map((folder, index) => /*#__PURE__*/_jsxDEV(Breadcrumb.Item, {\n      linkAs: Link,\n      linkProps: {\n        to: {\n          pathname: folder.id ? `/folder/${folder.id}` : \"/\",\n          state: {\n            folder: { ...folder,\n              path: path.slice(1, index)\n            }\n          }\n        }\n      },\n      className: \"text-truncate d-inline-block\",\n      style: {\n        maxWidth: \"150px\"\n      },\n      children: folder.name\n    }, folder.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)), currentFolder && /*#__PURE__*/_jsxDEV(Breadcrumb.Item, {\n      className: \"text-truncate d-inline-block\",\n      style: {\n        maxWidth: \"200px\"\n      },\n      active: true,\n      children: currentFolder.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_c = FolderBreadcrumbs;\n\nvar _c;\n\n$RefreshReg$(_c, \"FolderBreadcrumbs\");","map":{"version":3,"sources":["E:/Mussagy/Programming/Curso/firebase-google-drive-clone-main/firebase-google-drive-clone-main/google-drive-clone/src/components/google-drive/FolderBreadcrumbs.js"],"names":["React","Breadcrumb","Link","ROOT_FOLDER","FolderBreadcrumbs","currentFolder","path","className","map","folder","index","to","pathname","id","state","slice","maxWidth","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,QAA4B,uBAA5B;;AAEA,eAAe,SAASC,iBAAT,OAA8C;AAAA,MAAnB;AAAEC,IAAAA;AAAF,GAAmB;AAC3D,MAAIC,IAAI,GAAGD,aAAa,KAAKF,WAAlB,GAAgC,EAAhC,GAAqC,CAACA,WAAD,CAAhD;AACA,MAAIE,aAAJ,EAAmBC,IAAI,GAAG,CAAC,GAAGA,IAAJ,EAAU,GAAGD,aAAa,CAACC,IAA3B,CAAP;AAEnB,sBACE,QAAC,UAAD;AACE,IAAA,SAAS,EAAC,aADZ;AAEE,IAAA,SAAS,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAFb;AAAA,eAIGD,IAAI,CAACE,GAAL,CAAS,CAACC,MAAD,EAASC,KAAT,kBACR,QAAC,UAAD,CAAY,IAAZ;AAEE,MAAA,MAAM,EAAER,IAFV;AAGE,MAAA,SAAS,EAAE;AACTS,QAAAA,EAAE,EAAE;AACFC,UAAAA,QAAQ,EAAEH,MAAM,CAACI,EAAP,GAAa,WAAUJ,MAAM,CAACI,EAAG,EAAjC,GAAqC,GAD7C;AAEFC,UAAAA,KAAK,EAAE;AAAEL,YAAAA,MAAM,EAAE,EAAE,GAAGA,MAAL;AAAaH,cAAAA,IAAI,EAAEA,IAAI,CAACS,KAAL,CAAW,CAAX,EAAcL,KAAd;AAAnB;AAAV;AAFL;AADK,OAHb;AASE,MAAA,SAAS,EAAC,8BATZ;AAUE,MAAA,KAAK,EAAE;AAAEM,QAAAA,QAAQ,EAAE;AAAZ,OAVT;AAAA,gBAYGP,MAAM,CAACQ;AAZV,OACOR,MAAM,CAACI,EADd;AAAA;AAAA;AAAA;AAAA,YADD,CAJH,EAoBGR,aAAa,iBACZ,QAAC,UAAD,CAAY,IAAZ;AACE,MAAA,SAAS,EAAC,8BADZ;AAEE,MAAA,KAAK,EAAE;AAAEW,QAAAA,QAAQ,EAAE;AAAZ,OAFT;AAGE,MAAA,MAAM,MAHR;AAAA,gBAKGX,aAAa,CAACY;AALjB;AAAA;AAAA;AAAA;AAAA,YArBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD;KApCuBb,iB","sourcesContent":["import React from \"react\"\nimport { Breadcrumb } from \"react-bootstrap\"\nimport { Link } from \"react-router-dom\"\nimport { ROOT_FOLDER } from \"../../hooks/useFolder\"\n\nexport default function FolderBreadcrumbs({ currentFolder }) {\n  let path = currentFolder === ROOT_FOLDER ? [] : [ROOT_FOLDER]\n  if (currentFolder) path = [...path, ...currentFolder.path]\n\n  return (\n    <Breadcrumb\n      className=\"flex-grow-1\"\n      listProps={{ className: \"bg-white pl-0 m-0\" }}\n    >\n      {path.map((folder, index) => (\n        <Breadcrumb.Item\n          key={folder.id}\n          linkAs={Link}\n          linkProps={{\n            to: {\n              pathname: folder.id ? `/folder/${folder.id}` : \"/\",\n              state: { folder: { ...folder, path: path.slice(1, index) } },\n            },\n          }}\n          className=\"text-truncate d-inline-block\"\n          style={{ maxWidth: \"150px\" }}\n        >\n          {folder.name}\n        </Breadcrumb.Item>\n      ))}\n      {currentFolder && (\n        <Breadcrumb.Item\n          className=\"text-truncate d-inline-block\"\n          style={{ maxWidth: \"200px\" }}\n          active\n        >\n          {currentFolder.name}\n        </Breadcrumb.Item>\n      )}\n    </Breadcrumb>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}