{"ast":null,"code":"import _slicedToArray from\"E:\\\\GitHub\\\\CornelderDrive\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import _objectSpread from\"E:\\\\GitHub\\\\CornelderDrive\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{useReducer,useEffect}from\"react\";import{useAuth}from\"../contexts/AuthContext\";import{database}from\"../firebase\";var ACTIONS={SELECT_FOLDER:\"select-folder\",UPDATE_FOLDER:\"update-folder\",SET_CHILD_FOLDERS:\"set-child-folders\",SET_CHILD_FILES:\"set-child-files\",SET_CHILD_TABLE_DATA:\"set-child-table-data\"};export var ROOT_FOLDER={name:\"Home\",id:null,path:[]};function reducer(state,_ref){var type=_ref.type,payload=_ref.payload;switch(type){case ACTIONS.SELECT_FOLDER:return{folderId:payload.folderId,folder:payload.folder,childFiles:[],childFolders:[],childTableData:[]};case ACTIONS.UPDATE_FOLDER:return _objectSpread(_objectSpread({},state),{},{folder:payload.folder});case ACTIONS.SET_CHILD_FOLDERS:return _objectSpread(_objectSpread({},state),{},{childFolders:payload.childFolders});case ACTIONS.SET_CHILD_FILES:return _objectSpread(_objectSpread({},state),{},{childFiles:payload.childFiles});case ACTIONS.SET_CHILD_TABLE_DATA:return _objectSpread(_objectSpread({},state),{},{childTableData:payload.childTableData});default:return state;}}export function useFolder(){var folderId=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;var folder=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var _useReducer=useReducer(reducer,{folderId:folderId,folder:folder,childFolders:[],childFiles:[],childTableData:[]}),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];var _useAuth=useAuth(),currentUser=_useAuth.currentUser;useEffect(function(){dispatch({type:ACTIONS.SELECT_FOLDER,payload:{folderId:folderId,folder:folder}});},[folderId,folder]);useEffect(function(){if(folderId==null){return dispatch({type:ACTIONS.UPDATE_FOLDER,payload:{folder:ROOT_FOLDER}});}database.folders.doc(folderId).get().then(function(doc){dispatch({type:ACTIONS.UPDATE_FOLDER,payload:{folder:database.formatDoc(doc)}});}).catch(function(){dispatch({type:ACTIONS.UPDATE_FOLDER,payload:{folder:ROOT_FOLDER}});});},[folderId]);useEffect(function(){return database.folders.where(\"parentId\",\"==\",folderId).where(\"userId\",\"==\",currentUser.uid).orderBy(\"createdAt\").onSnapshot(function(snapshot){dispatch({type:ACTIONS.SET_CHILD_FOLDERS,payload:{childFolders:snapshot.docs.map(database.formatDoc)}});});},[folderId,currentUser]);useEffect(function(){return database.files.where(\"folderId\",\"==\",folderId).where(\"userId\",\"==\",currentUser.uid).orderBy(\"createdAt\").onSnapshot(function(snapshot){dispatch({type:ACTIONS.SET_CHILD_FILES,payload:{childFiles:snapshot.docs.map(database.formatDoc)}});});},[folderId,currentUser]);useEffect(function(){return database.tableData.where(\"folderId\",\"==\",folderId).orderBy(\"createdAt\").onSnapshot(function(snapshot){dispatch({type:ACTIONS.SET_CHILD_TABLE_DATA,payload:{childTableData:snapshot.docs.map(database.formatDoc)}});});},[folderId]);return state;}","map":{"version":3,"sources":["E:/GitHub/CornelderDrive/src/hooks/useFolder.js"],"names":["useReducer","useEffect","useAuth","database","ACTIONS","SELECT_FOLDER","UPDATE_FOLDER","SET_CHILD_FOLDERS","SET_CHILD_FILES","SET_CHILD_TABLE_DATA","ROOT_FOLDER","name","id","path","reducer","state","type","payload","folderId","folder","childFiles","childFolders","childTableData","useFolder","dispatch","currentUser","folders","doc","get","then","formatDoc","catch","where","uid","orderBy","onSnapshot","snapshot","docs","map","files","tableData"],"mappings":"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","sourcesContent":["import { useReducer, useEffect } from \"react\"\nimport { useAuth } from \"../contexts/AuthContext\"\nimport { database } from \"../firebase\"\n\n\n\nconst ACTIONS = {\n  SELECT_FOLDER: \"select-folder\",\n  UPDATE_FOLDER: \"update-folder\",\n  SET_CHILD_FOLDERS: \"set-child-folders\",\n  SET_CHILD_FILES: \"set-child-files\",\n  SET_CHILD_TABLE_DATA: \"set-child-table-data\",\n}\n\n\n\nexport const ROOT_FOLDER = { name: \"Home\", id: null, path: [] }\n\nfunction reducer(state, { type, payload }) {\n  switch (type) {\n    case ACTIONS.SELECT_FOLDER:\n      return {\n        folderId: payload.folderId,\n        folder: payload.folder,\n        childFiles: [],\n        childFolders: [],\n        childTableData: []\n      }\n    case ACTIONS.UPDATE_FOLDER:\n      return {\n        ...state,\n        folder: payload.folder,\n      }\n    case ACTIONS.SET_CHILD_FOLDERS:\n      return {\n        ...state,\n        childFolders: payload.childFolders,\n      }\n    case ACTIONS.SET_CHILD_FILES:\n      return {\n        ...state,\n        childFiles: payload.childFiles,\n      }\n    case ACTIONS.SET_CHILD_TABLE_DATA: \n      return {\n        ...state,\n        childTableData: payload.childTableData\n      }\n    default:\n      return state\n  }\n}\n\nexport function useFolder(folderId = null, folder = null) {\n  \n  const [state, dispatch] = useReducer(reducer, {\n    folderId,\n    folder,\n    childFolders: [],\n    childFiles: [],\n    childTableData: []\n  })\n  const { currentUser } = useAuth()\n\n  useEffect(() => {\n    dispatch({ type: ACTIONS.SELECT_FOLDER, payload: { folderId, folder } })\n  }, [folderId, folder])\n\n  useEffect(() => {\n    if (folderId == null) {\n      return dispatch({\n        type: ACTIONS.UPDATE_FOLDER,\n        payload: { folder: ROOT_FOLDER },\n      })\n    }\n\n    database.folders\n      .doc(folderId)\n      .get()\n      .then(doc => {\n        dispatch({\n          type: ACTIONS.UPDATE_FOLDER,\n          payload: { folder: database.formatDoc(doc) },\n        })\n      })\n      .catch(() => {\n        dispatch({\n          type: ACTIONS.UPDATE_FOLDER,\n          payload: { folder: ROOT_FOLDER },\n        })\n      })\n  }, [folderId])\n\n  useEffect(() => {\n    return database.folders\n      .where(\"parentId\", \"==\", folderId)\n      .where(\"userId\", \"==\", currentUser.uid)\n      .orderBy(\"createdAt\")\n      .onSnapshot(snapshot => {\n        dispatch({\n          type: ACTIONS.SET_CHILD_FOLDERS,\n          payload: { childFolders: snapshot.docs.map(database.formatDoc) },\n        })\n      })\n  }, [folderId, currentUser])\n\n  useEffect(() => {\n    return (\n      database.files\n        .where(\"folderId\", \"==\", folderId)\n        .where(\"userId\", \"==\", currentUser.uid)\n        .orderBy(\"createdAt\")\n        .onSnapshot(snapshot => {\n          dispatch({\n            type: ACTIONS.SET_CHILD_FILES,\n            payload: { childFiles: snapshot.docs.map(database.formatDoc) },\n          })\n        })\n    )\n  }, [folderId, currentUser])\n  useEffect(() => {\n    return (\n      database.tableData\n        .where(\"folderId\", \"==\", folderId)\n        .orderBy(\"createdAt\")\n        .onSnapshot(snapshot => {\n          dispatch({\n            type: ACTIONS.SET_CHILD_TABLE_DATA,\n            payload: { childTableData: snapshot.docs.map(database.formatDoc) },\n          })\n        })\n    )\n  }, [folderId])\n\n  return state\n}\n"]},"metadata":{},"sourceType":"module"}